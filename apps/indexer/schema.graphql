###############################################################################
# General entities
###############################################################################

type Asset @entity {
  id: ID!
  symbol: String!
  decimals: Int!
}

type Oracle @entity {
  id: ID!
  price: BigInt
  lastPriceFetchTimestamp: DateTime!
}

type SetOwner @entity {
  id: ID!
  newOwner: String!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type SetFeeRecipient @entity {
  id: ID!
  newFeeRecipient: String!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type EnableIrm @entity {
  id: ID!
  irm: String!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type EnableLltv @entity {
  id: ID!
  lltv: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

###############################################################################
# Market entities
###############################################################################

type MarketSetFee @entity {
  id: ID!
  marketId: String!
  newFee: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type MarketCreateMarket @entity {
  id: ID!
  marketId: String!
  loanToken: String!
  collateralToken: String!
  oracle: String!
  irm: String!
  lltv: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type MarketSupply @entity {
  id: ID!
  marketId: String!
  caller: String!
  onBehalf: String!
  assets: BigInt!
  shares: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type MarketWithdraw @entity {
  id: ID!
  marketId: String!
  caller: String!
  onBehalf: String!
  receiver: String!
  assets: BigInt!
  shares: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type MarketBorrow @entity {
  id: ID!
  marketId: String!
  caller: String!
  onBehalf: String!
  receiver: String!
  assets: BigInt!
  shares: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type MarketRepay @entity {
  id: ID!
  marketId: String!
  caller: String!
  onBehalf: String!
  assets: BigInt!
  shares: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type MarketSupplyCollateral @entity {
  id: ID!
  marketId: String!
  caller: String!
  onBehalf: String!
  assets: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type MarketWithdrawCollateral @entity {
  id: ID!
  marketId: String!
  caller: String!
  onBehalf: String!
  receiver: String!
  assets: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type MarketLiquidate @entity {
  id: ID!
  marketId: String!
  caller: String!
  borrower: String!
  repaidAssets: BigInt!
  repaidShares: BigInt!
  seizedAssets: BigInt!
  badDebtAssets: BigInt!
  badDebtShares: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type FlashLoan @entity {
  id: ID!
  caller: String!
  token: String!
  assets: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type SetAuthorization @entity {
  id: ID!
  caller: String!
  authorizer: String!
  authorized: String!
  newIsAuthorized: Boolean!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type IncrementNonce @entity {
  id: ID!
  caller: String!
  authorizer: String!
  usedNonce: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type MarketAccrueInterest @entity {
  id: ID!
  marketId: String!
  prevBorrowRate: BigInt!
  interest: BigInt!
  feeShares: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

###############################################################################
# Vault entities
###############################################################################

type VaultSubmitTimelock @entity {
  id: ID!
  vaultId: String!
  newTimelock: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type VaultSetTimelock @entity {
  id: ID!
  vaultId: String!
  caller: String!
  newTimelock: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type VaultSetSkimRecipient @entity {
  id: ID!
  vaultId: String!
  newSkimRecipient: String!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type VaultSetFee @entity {
  id: ID!
  vaultId: String!
  caller: String!
  newFee: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type VaultSetFeeRecipient @entity {
  id: ID!
  vaultId: String!
  newFeeRecipient: String!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type VaultSubmitGuardian @entity {
  id: ID!
  vaultId: String!
  newGuardian: String!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type VaultSetGuardian @entity {
  id: ID!
  vaultId: String!
  caller: String!
  guardian: String!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type VaultSubmitCap @entity {
  id: ID!
  vaultId: String!
  caller: String!
  marketId: String!
  cap: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type VaultSetCap @entity {
  id: ID!
  vaultId: String!
  caller: String!
  marketId: String!
  cap: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type VaultUpdateLastTotalAssets @entity {
  id: ID!
  vaultId: String!
  updatedTotalAssets: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type VaultSubmitMarketRemoval @entity {
  id: ID!
  vaultId: String!
  caller: String!
  marketId: String!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type VaultSetCurator @entity {
  id: ID!
  vaultId: String!
  newCurator: String!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type VaultSetIsAllocator @entity {
  id: ID!
  vaultId: String!
  allocator: String!
  isAllocator: Boolean!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type VaultRevokePendingTimelock @entity {
  id: ID!
  vaultId: String!
  caller: String!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type VaultRevokePendingCap @entity {
  id: ID!
  vaultId: String!
  caller: String!
  marketId: String!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type VaultRevokePendingGuardian @entity {
  id: ID!
  vaultId: String!
  caller: String!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type VaultRevokePendingMarketRemoval @entity {
  id: ID!
  vaultId: String!
  caller: String!
  marketId: String!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type VaultSetSupplyQueue @entity {
  id: ID!
  vaultId: String!
  caller: String!
  newSupplyQueue: [String!]!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type VaultSetWithdrawQueue @entity {
  id: ID!
  vaultId: String!
  caller: String!
  newWithdrawQueue: [String!]!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type VaultReallocateSupply @entity {
  id: ID!
  vaultId: String!
  caller: String!
  marketId: String!
  suppliedAssets: BigInt!
  suppliedShares: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type VaultReallocateWithdraw @entity {
  id: ID!
  vaultId: String!
  caller: String!
  marketId: String!
  withdrawnAssets: BigInt!
  withdrawnShares: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type VaultAccrueInterest @entity {
  id: ID!
  vaultId: String!
  newTotalAssets: BigInt!
  feeShares: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type VaultSkim @entity {
  id: ID!
  vaultId: String!
  caller: String!
  token: String!
  amount: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type VaultCreateMetaMorpho @entity {
  id: ID!
  metaMorpho: String!
  caller: String!
  initialOwner: String!
  initialTimelock: BigInt!
  asset: String!
  name: String!
  symbol: String!
  salt: String!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type VaultDeposit @entity {
  id: ID!
  vaultId: String!
  sender: String!
  owner: String!
  assets: BigInt!
  shares: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type VaultWithdraw @entity {
  id: ID!
  vaultId: String!
  sender: String!
  receiver: String!
  owner: String!
  assets: BigInt!
  shares: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

###############################################################################
# AdaptativeCurveIRM entities
###############################################################################
type AdaptativeCurveIRMBorrowRateUpdate @entity {
  id: ID!
  marketId: String!
  avgBorrowRate: BigInt!
  rateAtTarget: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

###############################################################################
# PublicAllocator entities
###############################################################################
type PublicAllocatorPublicWithdrawal @entity {
  id: ID!
  sender: String!
  vaultId: String!
  marketId: String!
  withdrawnAssets: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type PublicAllocatorPublicReallocateTo @entity {
  id: ID!
  sender: String!
  vaultId: String!
  supplyMarketId: String!
  suppliedAssets: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type PublicAllocatorSetAdmin @entity {
  id: ID!
  sender: String!
  vaultId: String!
  admin: String!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type PublicAllocatorSetFee @entity {
  id: ID!
  sender: String!
  vaultId: String!
  fee: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type PublicAllocatorTransferFee @entity {
  id: ID!
  sender: String!
  vaultId: String!
  amount: BigInt!
  feeRecipient: String!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}

type PublicAllocatorSetFlowCaps @entity {
  id: ID!
  sender: String!
  vaultId: String!
  config: JSON!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
}
