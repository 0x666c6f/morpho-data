type SetOwner @entity {
  id: ID!
  newOwner: String!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
  transactionHash: String!
}

type SetFee @entity {
  id: ID!
  marketId: String!
  newFee: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
  transactionHash: String!
}

type SetFeeRecipient @entity {
  id: ID!
  newFeeRecipient: String!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
  transactionHash: String!
}

type EnableIrm @entity {
  id: ID!
  irm: String!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
  transactionHash: String!
}

type EnableLltv @entity {
  id: ID!
  lltv: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
  transactionHash: String!
}

type CreateMarket @entity {
  id: ID!
  marketId: String!
  marketParams: MarketParams!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
  transactionHash: String!
}

type MarketParams {
  loanToken: String!
  collateralToken: String!
  oracle: String!
  irm: String!
  lltv: BigInt!
}

type Supply @entity {
  id: ID!
  marketId: String!
  caller: String!
  onBehalf: String!
  assets: BigInt!
  shares: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
  transactionHash: String!
}

type Withdraw @entity {
  id: ID!
  marketId: String!
  caller: String!
  onBehalf: String!
  receiver: String!
  assets: BigInt!
  shares: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
  transactionHash: String!
}

type Borrow @entity {
  id: ID!
  caller: String!
  onBehalf: String!
  receiver: String!
  assets: BigInt!
  shares: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
  transactionHash: String!
}

type Repay @entity {
  id: ID!
  marketId: String!
  caller: String!
  onBehalf: String!
  assets: BigInt!
  shares: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
  transactionHash: String!
}

type SupplyCollateral @entity {
  id: ID!
  marketId: String!
  caller: String!
  onBehalf: String!
  assets: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
  transactionHash: String!
}

type WithdrawCollateral @entity {
  id: ID!
  marketId: String!
  caller: String!
  onBehalf: String!
  receiver: String!
  assets: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
  transactionHash: String!
}

type Liquidate @entity {
  id: ID!
  marketId: String!
  caller: String!
  borrower: String!
  repaidAssets: BigInt!
  repaidShares: BigInt!
  seizedAssets: BigInt!
  badDebtAssets: BigInt!
  badDebtShares: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
  transactionHash: String!
}

type FlashLoan @entity {
  id: ID!
  caller: String!
  token: String!
  assets: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
  transactionHash: String!
}

type SetAuthorization @entity {
  id: ID!
  caller: String!
  authorizer: String!
  authorized: String!
  newIsAuthorized: Boolean!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
  transactionHash: String!
}

type IncrementNonce @entity {
  id: ID!
  caller: String!
  authorizer: String!
  usedNonce: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
  transactionHash: String!
}

type AccrueInterest @entity {
  id: ID!
  marketId: String!
  prevBorrowRate: BigInt!
  interest: BigInt!
  feeShares: BigInt!
  chain: Int!
  blockNumber: Int!
  blockTimestamp: DateTime!
  transactionHash: String!
}
